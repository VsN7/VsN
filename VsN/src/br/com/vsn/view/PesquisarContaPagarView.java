/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.vsn.view;

import br.com.vsn.controller.DespesaController;
import br.com.vsn.model.Despesa;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vitor
 */
public class PesquisarContaPagarView extends javax.swing.JInternalFrame {

    private static int id;
    SimpleDateFormat sdf;
    NumberFormat formatter;
    static Despesa despesa;
    String valorCombo;
    public static int validador=0;
    public static int getId() {
        return id;
    }

    public static void setId(int id) {
        PesquisarContaPagarView.id = id;
    }
    
    
    /**
     * Creates new form PesquisarView
     */
    public PesquisarContaPagarView() {
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        formatter = new DecimalFormat("#0.00");
        initComponents();
        
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        double lar =d.getWidth();
        int alt = (int) d.getHeight();
        this.setLocation((int) ((lar - this.getSize().width) / 2), (alt - this.getSize().height)/6);
        initComponents();
        
        try {
            this.preencherTabela();
        } catch (Exception ex) {
            Logger.getLogger(PesquisarContaPagarView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        comboFiltro = new javax.swing.JComboBox<>();
        inputSelecionado = new javax.swing.JTextField();
        buttonBuscar = new javax.swing.JToggleButton();

        setClosable(true);
        setTitle("Pesquisar Contas a Pagar");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Descrição", "Valor", "Parcelas", "Situação"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
        }

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descrição" }));

        inputSelecionado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        buttonBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buttonBuscar.setText("Buscar");
        buttonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(comboFiltro, 0, 247, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(inputSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonBuscar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonBuscar)
                        .addComponent(inputSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(evt.getClickCount() == 2){
          try {
              
                this.id = this.valorCollun();
                DespesaController dc = new DespesaController();
                despesa = dc.despesaUnico(id).get(0);
                try{
                    if(validador == 0){
                        this.valoresInputContasPagar();
                        //ContaPagarView.ativarInputCadastrar();
                        ContaPagarView.inputId.setEnabled(true);
                        System.out.println("AQ");
                    }else if(validador == 1){
                       this.valoresInputRelatorioDespesasGeral();
                    }
                
                }catch(Exception e){
                   Logger.getLogger(PesquisarContaPagarView.class.getName()).log(Level.SEVERE, null, e);
                }
                this.dispose();
            } catch (Exception ex) {
                Logger.getLogger(PesquisarContaPagarView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void buttonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBuscarActionPerformed

        try{
            DespesaController dc = new DespesaController();
            valorCombo=comboFiltro.getSelectedItem().toString().toLowerCase();
            if(valorCombo.equals("descrição")){
                this.preencherTabelaFiltroDescricao();
            }

        }catch(Exception e){
            Logger.getLogger(PesquisarClienteView.class.getName()).log(Level.SEVERE, null, e);
        }
    }//GEN-LAST:event_buttonBuscarActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton buttonBuscar;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JTextField inputSelecionado;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    
    public void preencherTabela() throws Exception{
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        DespesaController dc = new DespesaController();
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        modelo.setNumRows(0);
        for(int i=0; i<dc.getDespesas().size(); i++){
            modelo.addRow(new Object[]{
             dc.getDespesas().get(i).getId(),
             dc.getDespesas().get(i).getDescricao(),
             dc.getDespesas().get(i).getValor(),
             dc.getDespesas().get(i).getParcelas(),
             dc.getDespesas().get(i).getSituacao()
             });
        }
        
    }
    
    public void preencherTabelaFiltroDescricao() throws Exception{
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        DespesaController dc = new DespesaController();
        DefaultTableModel modelo = (DefaultTableModel)jTable1.getModel();
        modelo.setNumRows(0);
        for(int i=0; i<dc.contaPagarFiltroDescricao(inputSelecionado.getText()).size(); i++){
            modelo.addRow(new Object[]{
             dc.contaPagarFiltroDescricao(inputSelecionado.getText()).get(i).getId(),
             dc.contaPagarFiltroDescricao(inputSelecionado.getText()).get(i).getDescricao(),
             dc.contaPagarFiltroDescricao(inputSelecionado.getText()).get(i).getValor(),
             dc.contaPagarFiltroDescricao(inputSelecionado.getText()).get(i).getParcelas(),
             dc.contaPagarFiltroDescricao(inputSelecionado.getText()).get(i).getSituacao()
             });
        }
        
    }
    
    public int valorCollun(){
        int row = jTable1.getSelectedRow();
        Object value = null;
        String converteValueString = "";
         if (row > -1) { //então tem ítem selecionado
             value = jTable1.getValueAt(row, 0);
         }
         converteValueString = ""+value;
         id = Integer.parseInt(converteValueString);
         return id;
   }
    
    public void valoresInputContasPagar(){
        ContaPagarView.inputId.setText(""+despesa.getId());
        ContaPagarView.inputDescricao.setText(""+despesa.getDescricao());
        ContaPagarView.inputValorTotal.setText(""+formatter.format(despesa.getValor()));
        ContaPagarView.inputParcelas.setText(""+despesa.getParcelas());
        ContaPagarView.inputValorParcela.setText(""+formatter.format((despesa.getValor()/despesa.getParcelas())));
        ContaPagarView.inputDataInicio.setText(""+sdf.format(despesa.getDataInicio().getTime()));
        ContaPagarView.inputVencimento.setText(""+sdf.format(despesa.getDataVencimento().getTime()));
        ContaPagarView.inputSituacao.setText(""+despesa.getSituacao());
    }
    
    public void valoresInputRelatorioDespesasGeral(){
        FiltroRelatorioContasPagarView.inputId.setText(""+despesa.getId());
        FiltroRelatorioContasPagarView.inputDescricao.setText(""+despesa.getDescricao());
    }

}
